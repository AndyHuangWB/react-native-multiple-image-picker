///
/// NitroPreviewConfig.swift
/// This file was generated by nitrogen. DO NOT MODIFY THIS FILE.
/// https://github.com/mrousavy/nitro
/// Copyright Â© 2024 Marc Rousavy @ Margelo
///

import NitroModules

/**
 * Represents an instance of `NitroPreviewConfig`, backed by a C++ struct.
 */
public typealias NitroPreviewConfig = margelo.nitro.multipleimagepicker.NitroPreviewConfig

public extension NitroPreviewConfig {
  private typealias bridge = margelo.nitro.multipleimagepicker.bridge.swift

  /**
   * Create a new instance of `NitroPreviewConfig`.
   */
  init(index: Double, language: Language, backgroundColor: Double?) {
    self.init(index, language, { () -> bridge.std__optional_double_ in
      if let __unwrappedValue = backgroundColor {
        return bridge.create_std__optional_double_(__unwrappedValue)
      } else {
        return .init()
      }
    }())
  }

  var index: Double {
    @inline(__always)
    get {
      return self.__index
    }
    @inline(__always)
    set {
      self.__index = newValue
    }
  }
  
  var language: Language {
    @inline(__always)
    get {
      return self.__language
    }
    @inline(__always)
    set {
      self.__language = newValue
    }
  }
  
  var backgroundColor: Double? {
    @inline(__always)
    get {
      return self.__backgroundColor.value
    }
    @inline(__always)
    set {
      self.__backgroundColor = { () -> bridge.std__optional_double_ in
        if let __unwrappedValue = newValue {
          return bridge.create_std__optional_double_(__unwrappedValue)
        } else {
          return .init()
        }
      }()
    }
  }
}
