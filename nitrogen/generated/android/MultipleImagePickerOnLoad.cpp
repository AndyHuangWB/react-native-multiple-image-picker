///
/// MultipleImagePickerOnLoad.cpp
/// This file was generated by nitrogen. DO NOT MODIFY THIS FILE.
/// https://github.com/mrousavy/nitro
/// Copyright Â© 2024 Marc Rousavy @ Margelo
///

#include "MultipleImagePickerOnLoad.hpp"

#include <jni.h>
#include <fbjni/fbjni.h>
#include <NitroModules/HybridObjectRegistry.hpp>

#include "JHybridMultipleImagePickerSpec.hpp"
#include "JFunc_void_std__vector_Result_.hpp"
#include "JFunc_void_double.hpp"
#include <NitroModules/JNISharedPtr.hpp>

namespace margelo::nitro::multipleimagepicker {

int initialize(JavaVM* vm) {
  using namespace margelo::nitro;
  using namespace margelo::nitro::multipleimagepicker;
  using namespace facebook;

  return facebook::jni::initialize(vm, [] {
    // Register native JNI methods
    margelo::nitro::multipleimagepicker::JHybridMultipleImagePickerSpec::registerNatives();
    margelo::nitro::multipleimagepicker::JFunc_void_std__vector_Result_::registerNatives();
    margelo::nitro::multipleimagepicker::JFunc_void_double::registerNatives();

    // Register Nitro Hybrid Objects
    HybridObjectRegistry::registerHybridObjectConstructor(
      "MultipleImagePicker",
      []() -> std::shared_ptr<HybridObject> {
        static auto javaClass = jni::findClassStatic("com/margelo/nitro/multipleimagepicker/MultipleImagePicker");
        static auto defaultConstructor = javaClass->getConstructor<JHybridMultipleImagePickerSpec::javaobject()>();
    
        auto instance = javaClass->newObject(defaultConstructor);
    #ifdef NITRO_DEBUG
        if (instance == nullptr) [[unlikely]] {
          throw std::runtime_error("Failed to create an instance of \"JHybridMultipleImagePickerSpec\" - the constructor returned null!");
        }
    #endif
        auto globalRef = jni::make_global(instance);
        return JNISharedPtr::make_shared_from_jni<JHybridMultipleImagePickerSpec>(globalRef);
      }
    );
  });
}

} // namespace margelo::nitro::multipleimagepicker
