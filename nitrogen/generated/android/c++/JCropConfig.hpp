///
/// JCropConfig.hpp
/// This file was generated by nitrogen. DO NOT MODIFY THIS FILE.
/// https://github.com/mrousavy/nitro
/// Copyright Â© 2024 Marc Rousavy @ Margelo
///

#pragma once

#include <fbjni/fbjni.h>
#include "CropConfig.hpp"

#include <optional>

namespace margelo::nitro::imagepicker {

  using namespace facebook;

  /**
   * The C++ JNI bridge between the C++ struct "CropConfig" and the the Kotlin data class "CropConfig".
   */
  struct JCropConfig final: public jni::JavaClass<JCropConfig> {
  public:
    static auto constexpr kJavaDescriptor = "Lcom/margelo/nitro/imagepicker/CropConfig;";

  public:
    /**
     * Convert this Java/Kotlin-based struct to the C++ struct CropConfig by copying all values to C++.
     */
    [[maybe_unused]]
    CropConfig toCpp() const {
      static const auto clazz = javaClassStatic();
      static const auto fieldCircle = clazz->getField<jni::JBoolean>("circle");
      jni::local_ref<jni::JBoolean> circle = this->getFieldValue(fieldCircle);
      return CropConfig(
        circle != nullptr ? std::make_optional(circle->value()) : std::nullopt
      );
    }

  public:
    /**
     * Create a Java/Kotlin-based struct by copying all values from the given C++ struct to Java.
     */
    [[maybe_unused]]
    static jni::local_ref<JCropConfig::javaobject> fromCpp(const CropConfig& value) {
      return newInstance(
        value.circle.has_value() ? jni::JBoolean::valueOf(value.circle.value()) : nullptr
      );
    }
  };

} // namespace margelo::nitro::imagepicker
